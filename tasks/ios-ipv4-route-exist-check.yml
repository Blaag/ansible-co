---
##########
#
# args:
#  ipv4_prefix : ipv4 prefix to be checked
#  vrf         : vrf to look in
#
# returns:
#  ipv4_prefix_exist       : boolean of whether the exact prefix was found
#  ipv4_prefix_exist_longer: boolean of whether a longer match was found - can only be true if exact prefix match is false
#  ipv4_network            : the network portion of the prefix
#  ipv4_mask               : the dotted decimal mask portion of the prefix

- include: ../tasks/ipv4-convert-prefix-notation.yml

- name: "check for ipv4 route {{ ipv4_prefix }} in global table"
  ios_command:
    commands: "show ip route {{ ipv4_network }} {{ ipv4_mask }}"
    provider: "{{ provider }}"
  register: sh_ipv4_global_route_output
  when: "vrf is undefined"

- name: "check for ipv4 route {{ ipv4_prefix }} in vrf {{ vrf }}"
  ios_command:
    commands: "show ip route vrf {{ vrf }} {{ ipv4_network }} {{ ipv4_mask }}"
    provider: "{{ provider }}"
  register: sh_ipv4_vrf_route_output
  when: "vrf is defined"

- set_fact:
    sh_ipv4_route_output: "{{ sh_ipv4_global_route_output }}"
  when: "vrf is undefined"

- set_fact:
    sh_ipv4_route_output: "{{ sh_ipv4_vrf_route_output }}"
  when: "vrf is defined"

#- debug: var=sh_ipv4_route_output

- set_fact:
    ipv4_prefix_exist: true
  when: "{{ sh_ipv4_route_output.stdout[0].count('Known') > 0 }}"

- set_fact:
    ipv4_prefix_exist: false
  when: "{{ sh_ipv4_route_output.stdout[0].count('Known') < 1 }}"

#- debug: var=ipv4_prefix_exist

- name: check for ipv4 longer route for "{{ ipv4_prefix }} in global table"
  ios_command:
    commands: "show ip route {{ ipv4_network }} {{ ipv4_mask }} longer-prefixes | i via|directly"
    provider: "{{ provider }}"
  register: sh_ipv4_global_route_longer_output
  when: "vrf is undefined"

- name: check for ipv4 longer route for "{{ ipv4_prefix }} in vrf {{ vrf }}"
  ios_command:
    commands: "show ip route vrf {{ vrf }} {{ ipv4_network }} {{ ipv4_mask }} longer-prefixes | i via|directly"
    provider: "{{ provider }}"
  register: sh_ipv4_vrf_route_longer_output
  when: "vrf is defined"

- set_fact:
    sh_ipv4_route_longer_output: "{{ sh_ipv4_global_route_longer_output }}"
  when: "vrf is undefined"

- set_fact:
    sh_ipv4_route_longer_output: "{{ sh_ipv4_vrf_route_longer_output }}"
  when: "vrf is defined"

#- debug: var=sh_ipv4_route_longer_output

- set_fact:
    ipv4_prefix_exist_longer: false

- set_fact:
    ipv4_prefix_exist_longer: true
  when: "{{ sh_ipv4_route_longer_output.stdout[0].count('] via ') > 0 }}"

- set_fact:
    ipv4_prefix_exist_longer: true
  when: "{{ sh_ipv4_route_longer_output.stdout[0].count('is directly') > 0 }}"

- set_fact:
    ipv4_prefix_exist_longer: false
  when: "{{ ipv4_prefix_exist }}"

#- debug: var=ipv4_prefix_exist_longer
