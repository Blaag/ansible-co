---
- hosts: "{{ host_list }}"
  gather_facts: no
  connection: local

  tasks:

  - name: obtain login credentials
    include_vars: ../secrets.yml

  - name: define provider
    set_fact:
      provider:
        host: "{{ inventory_hostname }}"
        username: "{{ creds['username'] }}"
        password: "{{ creds['password'] }}"
        auth_pass: "{{ creds['auth_pass'] }}"
        transport: cli

  - include: ../tasks/cisco-platform-check.yml

  - name: assume upgraded needed
    set_fact:
      upgraded_needed: true

  - name: determine suggested upgrade version
    include_vars: "../vars/{{ item }}"
    with_items:
      - "{{ cisco_model }}.yml"

  - debug: var=cisco_upgrade_version

  - name: determine current image name
    set_fact:
      existing_image_name: "{{ ansible_net_image | regex_replace('^.*:/?(.*)$', '\\1') }}"

  - debug: var=existing_image_name

  - name: perform extra check when image name contains packages.conf
    local_action: "shell echo {{ cisco_upgrade_version }} {{ cisco_version }} | awk -f ../scripts/cisco-iosxe-version-match.awk"
    register: shorthand
    when: existing_image_name.count('packages.conf') > 0

  - name: set shorthand of cisco upgrade version
    set_fact:
      shorthand_cisco_upgrade_version: "{{ shorthand.stdout_lines[0] }}"
    when: existing_image_name.count('packages.conf') > 0

  - debug: var=shorthand_cisco_upgrade_version

  - name: determine whether upgrade necessary
    set_fact:
      upgrade_needed: "{{ cisco_upgrade_version != existing_image_name }}"
    when: shorthand_cisco_upgrade_version is undefined

  - name: determine whether upgrade necessary when image name contains packages.conf
    set_fact:
      upgrade_needed: "{{ shorthand_cisco_upgrade_version != cisco_version }}"
    when: shorthand_cisco_upgrade_version is defined

  - debug: var=upgrade_needed

  - name: determine software destination
    set_fact:
      image_destination: "{{ ansible_net_image | regex_replace('^(.*:).*$', '\\1') }}"

  - debug: var=image_destination

  - include: ../tasks/cisco-ios-upgrade.yml
    when: cisco_platform == 'ios' and upgrade_needed

  - include: ../tasks/cisco-iosxe-upgrade.yml
    when: cisco_platform == 'iosxe' and upgrade_needed

  - include: ../tasks/cisco-nxos-upgrade.yml
    when: cisco_platform == 'nxos' and upgrade_needed
...
